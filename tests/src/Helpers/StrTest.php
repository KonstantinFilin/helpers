<?php

namespace Helpers;

use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2018-10-28 at 18:33:51.
 */
class StrTest extends TestCase {

    /**
     * @var Str
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Str;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers Helpers\Str::createRandomNum
     */
    public function testCreateRandomNum() {
        $len = 7;
        $value = Str::createRandomNum($len);
        $this->assertEquals($len, strlen($value));
        $this->assertRegExp("/^[\d]{" . $len . "}$/", $value);
    }

    /**
     * @covers Helpers\Str::createRandom
     */
    public function testCreateRandom() {
        $len = 7;
        $value = Str::createRandom($len);
        $this->assertEquals($len, strlen($value));
        $this->assertRegExp("/^[\w\d_]{" . $len . "}$/", $value);
    }

    /**
     * @covers Helpers\Str::limitWords
     * @todo   Implement testLimitWords().
     */
//    public function testLimitWords() {
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete(
//                'This test has not been implemented yet.'
//        );
//    }

    /**
     * @covers Helpers\Str::limitChars
     */
    public function testLimitChars() {
        $str = "abcdefg";

        $this->assertEquals("abc...", Str::limitChars($str, 3));
        $this->assertEquals("abcd__", Str::limitChars($str, 4, "__"));
    }

    /**
     * @covers Helpers\Str::startsWith
     */
    public function testStartsWith() {
        $str = "abcdefg";
        $this->assertTrue(Str::startsWith($str, "abc"));
    }

    /**
     * @covers Helpers\Str::endsWith
     */
    public function testEndsWith() {
        $str = "abcdefg";
        $this->assertTrue(Str::endsWith($str, "efg"));
    }

}
